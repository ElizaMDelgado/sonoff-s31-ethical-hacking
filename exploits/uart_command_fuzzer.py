import random
import serial
import time

# Define a list of known commands and possible payloads
commands = [
    "STATUS 0",
    "INFO",
    "POWER ON",
    "POWER OFF",
    "BACKLOG POWER OFF; DELAY 10; POWER ON",
    "SetOption19 1",
    "SetOption19 0",
    "FriendlyName1 <script>alert(1)</script>",
    "Restart 1",
    "Upgrade 1",
    "WifiScan",
    "SerialSend5 41"
]

# Randomly mutate a command (light mutations)
def mutate_command(cmd):
    if random.random() < 0.3:
        insert_at = random.randint(0, len(cmd))
        random_char = chr(random.randint(33, 126))
        return cmd[:insert_at] + random_char + cmd[insert_at:]
    elif random.random() < 0.6:
        return cmd.lower()
    else:
        return cmd

# Serial port config
PORT = 'COM7'        # Change if needed
BAUD = 74880         # Sonoff S31 default UART speed

# Open log file
log_file = open("uart_command_fuzz_log.txt", "w", encoding="utf-8")

try:
    with serial.Serial(PORT, BAUD, timeout=1) as ser:
        print(f"[+] Connected to {PORT} at {BAUD} baud.")
        for i in range(30):
            cmd = mutate_command(random.choice(commands))
            ser.write((cmd + "\n").encode('utf-8'))
            time.sleep(0.5)
            response = ser.read(512).decode('utf-8', errors='ignore')
            print(f"[>] Sent: {cmd}")
            print(f"[<] Response: {response.strip()}")
            log_file.write(f"[>] Sent: {cmd}\n[<] Response: {response.strip()}\n\n")
            time.sleep(0.5)
finally:
    log_file.close()
    print("[+] Fuzzing session completed and logged.")
